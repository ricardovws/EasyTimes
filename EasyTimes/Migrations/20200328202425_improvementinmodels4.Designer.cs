// <auto-generated />
using System;
using EasyTimes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyTimes.Migrations
{
    [DbContext(typeof(EasyTimesContext))]
    [Migration("20200328202425_improvementinmodels4")]
    partial class improvementinmodels4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyTimes.Models.Charger", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End_");

                    b.Property<double>("Hours_");

                    b.Property<double>("OnTheRanch");

                    b.Property<int>("ServiceOrderID");

                    b.Property<DateTime>("Start_");

                    b.HasKey("id");

                    b.ToTable("Charger");
                });

            modelBuilder.Entity("EasyTimes.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ");

                    b.Property<string>("MainContactEmail");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("EasyTimes.Models.LittleTask", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BetweenBoth");

                    b.Property<DateTime>("End");

                    b.Property<int>("ServiceOrderID");

                    b.Property<DateTime>("Start");

                    b.HasKey("id");

                    b.ToTable("LittleTask");
                });

            modelBuilder.Entity("EasyTimes.Models.Owner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Agency");

                    b.Property<string>("Bank");

                    b.Property<string>("CurrentAccount");

                    b.Property<string>("Email");

                    b.Property<double>("GasPrice");

                    b.Property<string>("Name");

                    b.Property<double>("OvertimeProfitRate");

                    b.Property<string>("Phone");

                    b.Property<double>("PricePerHour");

                    b.HasKey("id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("EasyTimes.Models.ServiceOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountOfHours");

                    b.Property<bool>("CheckIn");

                    b.Property<int>("ClientID");

                    b.Property<string>("Comments");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("ProjectName");

                    b.Property<string>("SerialCode");

                    b.Property<DateTime>("StartDate");

                    b.Property<double>("TotalEarned");

                    b.HasKey("id");

                    b.ToTable("ServiceOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
